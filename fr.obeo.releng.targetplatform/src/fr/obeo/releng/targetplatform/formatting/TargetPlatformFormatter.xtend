/*
 * generated by Xtext
 */
package fr.obeo.releng.targetplatform.formatting

import com.google.inject.Inject
import fr.obeo.releng.targetplatform.services.TargetPlatformGrammarAccess
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class TargetPlatformFormatter extends AbstractDeclarativeFormatter {

	@Inject extension TargetPlatformGrammarAccess
	
	override protected void configureFormatting(FormattingConfig c) {
		
		c.setLinewrap(1).after(locationAccess.leftCurlyBracketKeyword_2_0);
		c.setLinewrap(1).before(locationAccess.rightCurlyBracketKeyword_2_3);
		c.setLinewrap(2).after(locationAccess.rightCurlyBracketKeyword_2_3);
		
// It's usually a good idea to activate the following three statements.
// They will add and preserve newlines around comments
		//c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		//c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		//c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)
	}
}
